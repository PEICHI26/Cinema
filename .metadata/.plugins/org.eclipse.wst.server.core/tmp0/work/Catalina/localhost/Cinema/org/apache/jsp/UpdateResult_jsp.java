/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-12-18 09:27:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class UpdateResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Update Result</title>\r\n");
      out.write("<style>\r\n");
      out.write("table, th, td {\r\n");
      out.write("  border:1px solid black;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      tw.cinema.model.Movie updateName = null;
      synchronized (session) {
        updateName = (tw.cinema.model.Movie) _jspx_page_context.getAttribute("updateName", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (updateName == null){
          updateName = new tw.cinema.model.Movie();
          _jspx_page_context.setAttribute("updateName", updateName, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      tw.cinema.model.Movie updateType = null;
      synchronized (session) {
        updateType = (tw.cinema.model.Movie) _jspx_page_context.getAttribute("updateType", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (updateType == null){
          updateType = new tw.cinema.model.Movie();
          _jspx_page_context.setAttribute("updateType", updateType, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      tw.cinema.model.Movie updateDate = null;
      synchronized (session) {
        updateDate = (tw.cinema.model.Movie) _jspx_page_context.getAttribute("updateDate", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (updateDate == null){
          updateDate = new tw.cinema.model.Movie();
          _jspx_page_context.setAttribute("updateDate", updateDate, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      tw.cinema.model.Movie updateLength = null;
      synchronized (session) {
        updateLength = (tw.cinema.model.Movie) _jspx_page_context.getAttribute("updateLength", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (updateLength == null){
          updateLength = new tw.cinema.model.Movie();
          _jspx_page_context.setAttribute("updateLength", updateLength, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      tw.cinema.model.Movie updateRelease = null;
      synchronized (session) {
        updateRelease = (tw.cinema.model.Movie) _jspx_page_context.getAttribute("updateRelease", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (updateRelease == null){
          updateRelease = new tw.cinema.model.Movie();
          _jspx_page_context.setAttribute("updateRelease", updateRelease, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      tw.cinema.model.Movie updateGrading = null;
      synchronized (session) {
        updateGrading = (tw.cinema.model.Movie) _jspx_page_context.getAttribute("updateGrading", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (updateGrading == null){
          updateGrading = new tw.cinema.model.Movie();
          _jspx_page_context.setAttribute("updateGrading", updateGrading, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      tw.cinema.model.Movie updateDirector = null;
      synchronized (session) {
        updateDirector = (tw.cinema.model.Movie) _jspx_page_context.getAttribute("updateDirector", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (updateDirector == null){
          updateDirector = new tw.cinema.model.Movie();
          _jspx_page_context.setAttribute("updateDirector", updateDirector, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      tw.cinema.model.Movie updateActor = null;
      synchronized (session) {
        updateActor = (tw.cinema.model.Movie) _jspx_page_context.getAttribute("updateActor", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (updateActor == null){
          updateActor = new tw.cinema.model.Movie();
          _jspx_page_context.setAttribute("updateActor", updateActor, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      tw.cinema.model.Movie updateIntro = null;
      synchronized (session) {
        updateIntro = (tw.cinema.model.Movie) _jspx_page_context.getAttribute("updateIntro", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (updateIntro == null){
          updateIntro = new tw.cinema.model.Movie();
          _jspx_page_context.setAttribute("updateIntro", updateIntro, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<h1>您已經修改電影資訊如下 :</h1>\r\n");
      out.write("<table>\r\n");
      out.write("  <tr>\r\n");
      out.write(" \r\n");
      out.write("    <th>Movie Name</th>\r\n");
      out.write("    <th>Release Date</th>\r\n");
      out.write("    <th>Movie Length</th>\r\n");
      out.write("    <th>Movie Type</th>\r\n");
      out.write("    <th>Movie Grading</th>\r\n");
      out.write("    <th>Movie Release</th>\r\n");
      out.write("    <th>Movie Director</th>\r\n");
      out.write("    <th>Movie Actors</th>\r\n");
      out.write("    <th>Movie Introduction</th>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("  </tr>\r\n");
      out.write("  <tr>\r\n");
      out.write("    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((tw.cinema.model.Movie)_jspx_page_context.findAttribute("updateName")).getMovie_Name())));
      out.write("</td>\r\n");
      out.write("    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((tw.cinema.model.Movie)_jspx_page_context.findAttribute("updateDate")).getMovie_Date())));
      out.write("</td>\r\n");
      out.write("    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((tw.cinema.model.Movie)_jspx_page_context.findAttribute("updateLength")).getMovie_Length())));
      out.write("</td>\r\n");
      out.write("    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((tw.cinema.model.Movie)_jspx_page_context.findAttribute("updateType")).getType())));
      out.write("</td>\r\n");
      out.write("    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((tw.cinema.model.Movie)_jspx_page_context.findAttribute("updateGrading")).getGrading())));
      out.write("</td>\r\n");
      out.write("    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((tw.cinema.model.Movie)_jspx_page_context.findAttribute("updateRelease")).getRelease())));
      out.write("</td>\r\n");
      out.write("    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((tw.cinema.model.Movie)_jspx_page_context.findAttribute("updateDirector")).getDirector())));
      out.write("</td>\r\n");
      out.write("    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((tw.cinema.model.Movie)_jspx_page_context.findAttribute("updateActor")).getActor())));
      out.write("</td>\r\n");
      out.write("    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((tw.cinema.model.Movie)_jspx_page_context.findAttribute("updateIntro")).getIntro())));
      out.write("</td>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("  </tr>\r\n");
      out.write("  \r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
